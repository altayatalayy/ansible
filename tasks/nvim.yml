---
- name: Set nvim path
  ansible.builtin.set_fact:
    nvim_path: "~/.config/nvim"

- name: Set is_ubuntu18_or_debian10 to true
  ansible.builtin.set_fact:
    is_ubuntu18_or_debian10: true
  when: >
    (ansible_facts['distribution'] == "Ubuntu" and
    ansible_facts['distribution_major_version'] == "18") or
    (ansible_facts['distribution'] == "Debian" and
    ansible_facts['distribution_major_version'] == "10")

- name: Set is_ubuntu18_or_debian10 to false
  ansible.builtin.set_fact:
    is_ubuntu18_or_debian10: false
  when: >
    not ((ansible_facts['distribution'] == "Ubuntu" and
    ansible_facts['distribution_major_version'] == "18") or
    (ansible_facts['distribution'] == "Debian" and
    ansible_facts['distribution_major_version'] == "10"))

- name: Install required packages with brew
  homebrew:
    name:
      - nvim
      - curl
      - git
      - llvm
  when:
    ansible_facts['os_family'] == "Darwin"

- name: Install required packages with apt
  ansible.builtin.apt:
    name:
      - curl
      - git
      - python3-pip
      - python3-venv
  become: true
  become_user: root
  when:
    ansible_facts['os_family'] == "Debian"

- name: Install neovim build dependencies
  ansible.builtin.apt:
    name:
      - libtool
      - libtool-bin
      - gettext
      - build-essential
      - cmake
      - pkg-config
      - unzip
  become: true
  become_user: root
  when: is_ubuntu18_or_debian10

- name: Install neovim from source, unzip tarball
  ansible.builtin.unarchive:
    src:
      "https://github.com/neovim/neovim/archive/refs/tags/stable.tar.gz"
    dest: "/home/{{ user_name }}/"
    remote_src: true
  when: is_ubuntu18_or_debian10

- name: Compile nvim
  community.general.make:
    chdir: ~/neovim-stable
    params:
      CMAKE_BUILD_TYPE: Release
  when: is_ubuntu18_or_debian10

- name: Run install
  community.general.make:
    chdir: '/home/{{ user_name }}/neovim-stable'
    target: install
  become: true
  become_user: root
  when: is_ubuntu18_or_debian10

- name: Install neovim Debian 20.04+
  ansible.builtin.apt:
    deb:
      "https://github.com/neovim/neovim/releases/download/stable/nvim-linux64.deb"
  become: true
  become_user: root
  when: >
    ansible_facts['os_family'] == "Debian" and
    not is_ubuntu18_or_debian10

- name: Copy config files
  ansible.builtin.git:
    repo: https://github.com/altayatalayy/nvim-config.git
    dest: "{{ nvim_path }}/"
    version: ubuntu18
  when: is_ubuntu18_or_debian10

- name: Copy config files
  ansible.builtin.git:
    repo: https://github.com/altayatalayy/nvim-config.git
    dest: "{{ nvim_path }}/"
    version: main
  when: not is_ubuntu18_or_debian10

- name: Install required packages for nvim plugins, Mac
  homebrew:
    name:
      - ripgrep
      - fd
      - nodejs
      - yarn
  when:
    ansible_facts['os_family'] == "Darwin"

- name: Install ripgrep, Ubuntu 18.10+
  ansible.builtin.apt:
    name:
      - ripgrep
      - fd-find
  become: true
  become_user: root
  when:
    ansible_facts['os_family'] == "Debian" and
    not is_ubuntu18_or_debian10

- name: Install ripgrep, Ubuntu 18.04
  ansible.builtin.apt:
    deb:
      "https://github.com/BurntSushi/ripgrep/releases/download/13.0.0/ripgrep_13.0.0_amd64.deb"
  become: true
  become_user: root
  when: is_ubuntu18_or_debian10

- name: Install required packages for nvim plugins
  ansible.builtin.apt:
    name:
      - cmake
      - make
      - gcc
      - nodejs
      - yarn
      - npm
      - unzip
  become: true
  become_user: root
  when:
    ansible_facts['os_family'] == "Debian"

- name: Install python, ansible, yaml linter and formatter
  ansible.builtin.pip:
    name:
      - ansible-lint
  when: not is_ubuntu18_or_debian10

- name: Install eslint
  community.general.npm:
    name: eslint
    global: true
  become: true
  become_user: root
  when: not is_ubuntu18_or_debian10

- name: Install lazygit, Mac
  homebrew:
    name: lazygit
  when:
    ansible_facts['os_family'] == "Darwin"

- name: Install lazygit, Debian
  ansible.builtin.unarchive:
    src:
      "https://github.com/jesseduffield/lazygit/releases/download/v0.36.0/lazygit_0.36.0_Linux_x86_64.tar.gz"
    dest: /usr/local/bin/
    remote_src: true
  become: true
  become_user: root
  when:
    ansible_facts['os_family'] == "Debian"

- name: Install cppcheck Macos
  homebrew:
    name:
      - cppcheck
  when:
    ansible_facts['os_family'] == "Darwin"

- name: Install cppcheck
  ansible.builtin.apt:
    name:
      - cppcheck
  become: true
  become_user: root
  when:
    ansible_facts['os_family'] == "Debian"
