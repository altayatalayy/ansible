---
- name: Set nvim path
  set_fact:
    nvim_path: "~/.config/nvim"

- name: Install required packages with brew
  homebrew:
    name:
      - nvim
      - curl
      - git
      - llvm
    state: latest
  when:
    ansible_facts['os_family'] == "Darwin"

- name: Install required packages with apt
  ansible.builtin.apt:
    name:
      - curl
      - git
      - python3-pip
      - python3-venv
    state: latest
  become: true
  become_user: root
  when:
    ansible_facts['os_family'] == "Debian"

- name: Install neovim Debian
  ansible.builtin.apt:
    deb: https://github.com/neovim/neovim/releases/download/v0.7.2/nvim-linux64.deb
  become: true
  become_user: root
  when:
    ansible_facts['os_family'] == "Debian"

- name: Make sure ~/.config/nvim exists
  ansible.builtin.file:
    path: "{{ nvim_path }}"
    state: directory
    owner: "{{ user_name }}"
    group:
      "{{ 'staff' if ansible_facts['os_family'] == 'Darwin'
      else user_name }}"
    mode: 0750

- name: Copy config files
  ansible.builtin.copy:
    src: files/nvim/
    dest: "{{ nvim_path }}/"
    owner: "{{ user_name }}"
    group:
      "{{ 'staff' if ansible_facts['os_family'] == 'Darwin'
      else user_name }}"
    mode: 0750

- name: Install required packages for nvim plugins, Mac
  homebrew:
    name:
      - ripgrep
      - nodejs
      - yarn
    state: latest
  when:
    ansible_facts['os_family'] == "Darwin"

- name: Install ripgrep, Ubuntu 18.10+
  ansible.builtin.apt:
    name:
      - ripgrep
    state: latest
  become: true
  become_user: root
  when:
    ansible_facts['os_family'] == "Debian" and
    not (ansible_facts['distribution'] == "Ubuntu" and
    ansible_facts['distribution_major_version'] == "18")

- name: Install ripgrep, Ubuntu 18.04
  ansible.builtin.apt:
    deb: https://github.com/BurntSushi/ripgrep/releases/download/13.0.0/ripgrep_13.0.0_amd64.deb
  become: true
  become_user: root
  when:
    ansible_facts['os_family'] == "Debian" and
    (ansible_facts['distribution'] == "Ubuntu" and
    ansible_facts['distribution_major_version'] == "18")

- name: Install reuired packages for nvim plugins
  ansible.builtin.apt:
    name:
      - cmake
      - make
      - gcc
      - nodejs
      - yarn
    state: latest
  become: true
  become_user: root
  when:
    ansible_facts['os_family'] == "Debian"

- name: Create venv debugpy
  ansible.builtin.pip:
    name:
      - debugpy
    virtualenv: ~/.virtualenvs/debugpy
    virtualenv_command: python3 -m venv
