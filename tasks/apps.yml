- name: Install apps with brew
  homebrew:
    name:
      - neofetch
      - htop
    state: latest
  when:
    ansible_facts['os_family'] == "Darwin"

- name: Install apps with apt
  apt:
    name:
      - neofetch
      - htop
      - preload
  become: true
  become_user: root
  when:
    ansible_facts['os_family'] == "Debian"

- name: Install apps with brew
  homebrew_cask:
    name: 
      - signal
      - bitwarden
      - spotify
      - google-chrome
      - firefox
      - discord
      - visual-studio-code
      - steam
      - nextcloud
      - sublime-text
      - raspberry-pi-imager
      - arduino
      - minecraft
      - android-studio
      - whatsapp
      - godot
      - mullvadvpn
      - zoom
      - libreoffice
    state: latest
  when:
    ansible_facts['os_family'] == "Darwin"


- name: Install apps as flatpak
  flatpak:
    name: org.signal.Signal
    state: present
    method: system
    remote: flathub
  when:
    ansible_facts['os_family'] == "Debian"

- name: Install apps as flatpak
  flatpak:
    name: com.bitwarden.desktop
    state: present
    method: system
    remote: flathub
  when:
    ansible_facts['os_family'] == "Debian"

- name: Install apps as flatpak
  flatpak:
    name: com.spotify.Client
    state: present
    method: system
    remote: flathub
  when:
    ansible_facts['os_family'] == "Debian"

- name: Install apps as flatpak
  flatpak:
    name: com.google.Chrome
    state: present
    method: system
    remote: flathub
  when:
    ansible_facts['os_family'] == "Debian"
  ignore_errors: yes

- name: Install apps as flatpak
  flatpak:
    name: org.mozilla.firefox 
    state: present
    method: system
    remote: flathub
  when:
    ansible_facts['os_family'] == "Debian"
    
- name: Install apps as flatpak
  flatpak:
    name: com.discordapp.Discord
    state: present
    method: system
    remote: flathub
  when:
    ansible_facts['os_family'] == "Debian"

- name: Install apps as flatpak
  flatpak:
    name: com.visualstudio.code
    state: present
    method: system
    remote: flathub
  when:
    ansible_facts['os_family'] == "Debian"

- name: Install apps as flatpak
  flatpak:
    name: com.valvesoftware.Steam
    state: present
    method: system
    remote: flathub
  when:
    ansible_facts['os_family'] == "Debian"

- name: Install apps as flatpak
  flatpak:
    name: com.sublimetext.three
    state: present
    method: system
    remote: flathub
  when:
    ansible_facts['os_family'] == "Debian"

- name: Install apps as flatpak
  flatpak:
    name: org.raspberrypi.rpi-imager
    state: present
    method: system
    remote: flathub
  when:
    ansible_facts['os_family'] == "Debian"

- name: Install apps as flatpak
  flatpak:
    name: cc.arduino.arduinoide
    state: present
    method: system
    remote: flathub
  when:
    ansible_facts['os_family'] == "Debian"

- name: Install apps as flatpak
  flatpak:
    name: com.mojang.Minecraft
    state: present
    method: system
    remote: flathub
  when:
    ansible_facts['os_family'] == "Debian"

- name: Install apps as flatpak
  flatpak:
    name: com.google.AndroidStudio
    state: present
    method: system
    remote: flathub
  when:
    ansible_facts['os_family'] == "Debian"

- name: Install apps as flatpak
  flatpak:
    name: org.godotengine.Godot
    state: present
    method: system
    remote: flathub
  when:
    ansible_facts['os_family'] == "Debian"

- name: Install apps as flatpak
  flatpak:
    name: us.zoom.Zoom
    state: present
    method: system
    remote: flathub
  when:
    ansible_facts['os_family'] == "Debian"

- name: Install apps as flatpak
  flatpak:
    name: org.libreoffice.LibreOffice
    state: present
    method: system
    remote: flathub
  when:
    ansible_facts['os_family'] == "Debian"
