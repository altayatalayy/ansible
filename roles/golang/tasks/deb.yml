---

- name: Gather the package facts
  ansible.builtin.package_facts:
    manager: auto

- name: Remove installed golang-go
  ansible.builtin.apt:
    name:
      - golang-go
    state: absent
    autoremove: true
  become: true
  when: >
    'golang-go' in ansible_facts.packages

- name: Check for existing go install
  ansible.builtin.stat:
    path: /usr/local/go
  register: result_go_installed

- name: Check go version
  ansible.builtin.command: "/usr/local/go/bin/go version"
  register: result_go_version
  when: >
    result_go_installed is defined and result_go_installed.stat.exists
  changed_when: false

- name: Set build_go
  ansible.builtin.set_fact:
    build_go: >
      {{ result_go_version is skipped or
      result_go_version.stdout_lines[0] is not match(".*?1\.21.*?") }}

- name: Remove old go
  ansible.builtin.file:
    path: /usr/local/go
    state: absent
  become: true
  when: build_go|lower|trim|bool

- name: Download and unarchive go
  ansible.builtin.unarchive:
    src: https://go.dev/dl/go1.21.1.linux-amd64.tar.gz
    dest: /usr/local
    remote_src: true
  become: true
  when: build_go|lower|trim|bool

- name: Add go to path
  ansible.builtin.lineinfile:
    path: '{{ item }}'
    line: 'export PATH=$PATH:/usr/local/go/bin'
    state: present
    create: true
    mode: '0644'
  with_items:
    - ~/.bashrc
    - ~/.zshenv
  when: build_go|lower|trim|bool
